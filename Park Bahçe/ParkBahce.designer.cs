#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Park_Bahçe
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute( Name="ParkBahce" )]
    public partial class ParkBahceDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertBakim(Bakim instance);
        partial void UpdateBakim(Bakim instance);
        partial void DeleteBakim(Bakim instance);
        partial void InsertDepoBilgi(DepoBilgi instance);
        partial void UpdateDepoBilgi(DepoBilgi instance);
        partial void DeleteDepoBilgi(DepoBilgi instance);
        partial void InsertDepoCiki(DepoCiki instance);
        partial void UpdateDepoCiki(DepoCiki instance);
        partial void DeleteDepoCiki(DepoCiki instance);
        partial void InsertEkip(Ekip instance);
        partial void UpdateEkip(Ekip instance);
        partial void DeleteEkip(Ekip instance);
        partial void InsertERapor(ERapor instance);
        partial void UpdateERapor(ERapor instance);
        partial void DeleteERapor(ERapor instance);
        partial void InsertGorev(Gorev instance);
        partial void UpdateGorev(Gorev instance);
        partial void DeleteGorev(Gorev instance);
        partial void InsertHata(Hata instance);
        partial void UpdateHata(Hata instance);
        partial void DeleteHata(Hata instance);
        partial void InsertHatirlatma(Hatirlatma instance);
        partial void UpdateHatirlatma(Hatirlatma instance);
        partial void DeleteHatirlatma(Hatirlatma instance);
        partial void InsertIzin(Izin instance);
        partial void UpdateIzin(Izin instance);
        partial void DeleteIzin(Izin instance);
        partial void InsertMalzameTip(MalzameTip instance);
        partial void UpdateMalzameTip(MalzameTip instance);
        partial void DeleteMalzameTip(MalzameTip instance);
        partial void InsertMotorluMalzame(MotorluMalzame instance);
        partial void UpdateMotorluMalzame(MotorluMalzame instance);
        partial void DeleteMotorluMalzame(MotorluMalzame instance);
        partial void InsertOPAriza(OPAriza instance);
        partial void UpdateOPAriza(OPAriza instance);
        partial void DeleteOPAriza(OPAriza instance);
        partial void InsertOParkMalzeme(OParkMalzeme instance);
        partial void UpdateOParkMalzeme(OParkMalzeme instance);
        partial void DeleteOParkMalzeme(OParkMalzeme instance);
        partial void InsertOyunPark(OyunPark instance);
        partial void UpdateOyunPark(OyunPark instance);
        partial void DeleteOyunPark(OyunPark instance);
        partial void InsertPark(Park instance);
        partial void UpdatePark(Park instance);
        partial void DeletePark(Park instance);
        partial void InsertPersonel(Personel instance);
        partial void UpdatePersonel(Personel instance);
        partial void DeletePersonel(Personel instance);
        partial void InsertSatinAlma(SatinAlma instance);
        partial void UpdateSatinAlma(SatinAlma instance);
        partial void DeleteSatinAlma(SatinAlma instance);
        partial void InsertSehir(Sehir instance);
        partial void UpdateSehir(Sehir instance);
        partial void DeleteSehir(Sehir instance);
        partial void InsertSulamaMalzeme(SulamaMalzeme instance);
        partial void UpdateSulamaMalzeme(SulamaMalzeme instance);
        partial void DeleteSulamaMalzeme(SulamaMalzeme instance);
        partial void InsertTasimaArac(TasimaArac instance);
        partial void UpdateTasimaArac(TasimaArac instance);
        partial void DeleteTasimaArac(TasimaArac instance);
        partial void InsertTatiller(Tatiller instance);
        partial void UpdateTatiller(Tatiller instance);
        partial void DeleteTatiller(Tatiller instance);
        #endregion

        public ParkBahceDataContext() :
            base( global::Park_Bahçe.Properties.Settings.Default.ParkBahceConnectionString1, mappingSource )
        {
            OnCreated();
        }

        public ParkBahceDataContext(string connection) :
            base( connection, mappingSource )
        {
            OnCreated();
        }

        public ParkBahceDataContext(System.Data.IDbConnection connection) :
            base( connection, mappingSource )
        {
            OnCreated();
        }

        public ParkBahceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base( connection, mappingSource )
        {
            OnCreated();
        }

        public ParkBahceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base( connection, mappingSource )
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Bakim> Bakims
        {
            get
            {
                return this.GetTable<Bakim>();
            }
        }

        public System.Data.Linq.Table<DepoBilgi> DepoBilgis
        {
            get
            {
                return this.GetTable<DepoBilgi>();
            }
        }

        public System.Data.Linq.Table<DepoCiki> DepoCikis
        {
            get
            {
                return this.GetTable<DepoCiki>();
            }
        }

        public System.Data.Linq.Table<Ekip> Ekips
        {
            get
            {
                return this.GetTable<Ekip>();
            }
        }

        public System.Data.Linq.Table<ERapor> ERapors
        {
            get
            {
                return this.GetTable<ERapor>();
            }
        }

        public System.Data.Linq.Table<Gorev> Gorevs
        {
            get
            {
                return this.GetTable<Gorev>();
            }
        }

        public System.Data.Linq.Table<Hata> Hatas
        {
            get
            {
                return this.GetTable<Hata>();
            }
        }

        public System.Data.Linq.Table<Hatirlatma> Hatirlatmas
        {
            get
            {
                return this.GetTable<Hatirlatma>();
            }
        }

        public System.Data.Linq.Table<Izin> Izins
        {
            get
            {
                return this.GetTable<Izin>();
            }
        }

        public System.Data.Linq.Table<MalzameTip> MalzameTips
        {
            get
            {
                return this.GetTable<MalzameTip>();
            }
        }

        public System.Data.Linq.Table<MotorluMalzame> MotorluMalzames
        {
            get
            {
                return this.GetTable<MotorluMalzame>();
            }
        }

        public System.Data.Linq.Table<OPAriza> OPArizas
        {
            get
            {
                return this.GetTable<OPAriza>();
            }
        }

        public System.Data.Linq.Table<OParkMalzeme> OParkMalzemes
        {
            get
            {
                return this.GetTable<OParkMalzeme>();
            }
        }

        public System.Data.Linq.Table<OyunPark> OyunParks
        {
            get
            {
                return this.GetTable<OyunPark>();
            }
        }

        public System.Data.Linq.Table<Park> Parks
        {
            get
            {
                return this.GetTable<Park>();
            }
        }

        public System.Data.Linq.Table<Personel> Personels
        {
            get
            {
                return this.GetTable<Personel>();
            }
        }

        public System.Data.Linq.Table<SatinAlma> SatinAlmas
        {
            get
            {
                return this.GetTable<SatinAlma>();
            }
        }

        public System.Data.Linq.Table<Sehir> Sehirs
        {
            get
            {
                return this.GetTable<Sehir>();
            }
        }

        public System.Data.Linq.Table<SulamaMalzeme> SulamaMalzemes
        {
            get
            {
                return this.GetTable<SulamaMalzeme>();
            }
        }

        public System.Data.Linq.Table<TasimaArac> TasimaAracs
        {
            get
            {
                return this.GetTable<TasimaArac>();
            }
        }

        public System.Data.Linq.Table<Tatiller> Tatillers
        {
            get
            {
                return this.GetTable<Tatiller>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Bakim" )]
    public partial class Bakim : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _AracID;

        private System.DateTime _Tarih;

        private string _Rapor;

        private EntityRef<TasimaArac> _TasimaArac;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAracIDChanging(int value);
        partial void OnAracIDChanged();
        partial void OnTarihChanging(System.DateTime value);
        partial void OnTarihChanged();
        partial void OnRaporChanging(string value);
        partial void OnRaporChanged();
        #endregion

        public Bakim()
        {
            this._TasimaArac = default( EntityRef<TasimaArac> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_AracID", DbType="Int NOT NULL" )]
        public int AracID
        {
            get
            {
                return this._AracID;
            }
            set
            {
                if ( ( this._AracID != value ) )
                {
                    if ( this._TasimaArac.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnAracIDChanging( value );
                    this.SendPropertyChanging();
                    this._AracID = value;
                    this.SendPropertyChanged( "AracID" );
                    this.OnAracIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Tarih", DbType="DateTime NOT NULL" )]
        public System.DateTime Tarih
        {
            get
            {
                return this._Tarih;
            }
            set
            {
                if ( ( this._Tarih != value ) )
                {
                    this.OnTarihChanging( value );
                    this.SendPropertyChanging();
                    this._Tarih = value;
                    this.SendPropertyChanged( "Tarih" );
                    this.OnTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Rapor", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never )]
        public string Rapor
        {
            get
            {
                return this._Rapor;
            }
            set
            {
                if ( ( this._Rapor != value ) )
                {
                    this.OnRaporChanging( value );
                    this.SendPropertyChanging();
                    this._Rapor = value;
                    this.SendPropertyChanged( "Rapor" );
                    this.OnRaporChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="TasimaArac_Bakim", Storage="_TasimaArac", ThisKey="AracID", OtherKey="ID", IsForeignKey=true )]
        public TasimaArac TasimaArac
        {
            get
            {
                return this._TasimaArac.Entity;
            }
            set
            {
                TasimaArac previousValue = this._TasimaArac.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._TasimaArac.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._TasimaArac.Entity = null;
                        previousValue.Bakims.Remove( this );
                    }
                    this._TasimaArac.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.Bakims.Add( this );
                        this._AracID = value.ID;
                    }
                    else
                    {
                        this._AracID = default( int );
                    }
                    this.SendPropertyChanged( "TasimaArac" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.DepoBilgi" )]
    public partial class DepoBilgi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _MTipID;

        private int _Miktar;

        public override string ToString()
        {
            return MalzameTip.Ad;
        }

        private EntitySet<DepoCiki> _DepoCikis;

        private EntityRef<MalzameTip> _MalzameTip;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMTipIDChanging(int value);
        partial void OnMTipIDChanged();
        partial void OnMiktarChanging(int value);
        partial void OnMiktarChanged();
        #endregion

        public DepoBilgi()
        {
            this._DepoCikis = new EntitySet<DepoCiki>( new Action<DepoCiki>( this.attach_DepoCikis ), new Action<DepoCiki>( this.detach_DepoCikis ) );
            this._MalzameTip = default( EntityRef<MalzameTip> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_MTipID", DbType="Int NOT NULL" )]
        public int MTipID
        {
            get
            {
                return this._MTipID;
            }
            set
            {
                if ( ( this._MTipID != value ) )
                {
                    if ( this._MalzameTip.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMTipIDChanging( value );
                    this.SendPropertyChanging();
                    this._MTipID = value;
                    this.SendPropertyChanged( "MTipID" );
                    this.OnMTipIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Miktar", DbType="Int NOT NULL" )]
        public int Miktar
        {
            get
            {
                return this._Miktar;
            }
            set
            {
                if ( ( this._Miktar != value ) )
                {
                    this.OnMiktarChanging( value );
                    this.SendPropertyChanging();
                    this._Miktar = value;
                    this.SendPropertyChanged( "Miktar" );
                    this.OnMiktarChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="DepoBilgi_DepoCiki", Storage="_DepoCikis", ThisKey="ID", OtherKey="DMID" )]
        public EntitySet<DepoCiki> DepoCikis
        {
            get
            {
                return this._DepoCikis;
            }
            set
            {
                this._DepoCikis.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_DepoBilgi", Storage="_MalzameTip", ThisKey="MTipID", OtherKey="ID", IsForeignKey=true )]
        public MalzameTip MalzameTip
        {
            get
            {
                return this._MalzameTip.Entity;
            }
            set
            {
                MalzameTip previousValue = this._MalzameTip.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._MalzameTip.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._MalzameTip.Entity = null;
                        previousValue.DepoBilgis.Remove( this );
                    }
                    this._MalzameTip.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.DepoBilgis.Add( this );
                        this._MTipID = value.ID;
                    }
                    else
                    {
                        this._MTipID = default( int );
                    }
                    this.SendPropertyChanged( "MalzameTip" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_DepoCikis(DepoCiki entity)
        {
            this.SendPropertyChanging();
            entity.DepoBilgi = this;
        }

        private void detach_DepoCikis(DepoCiki entity)
        {
            this.SendPropertyChanging();
            entity.DepoBilgi = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.DepoCikis" )]
    public partial class DepoCiki : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _DMID;

        private System.DateTime _Tarih;

        private int _Miktar;

        private int _PID;

        public override string ToString()
        {
            return DepoBilgi.MalzameTip.Ad;
        }

        private EntityRef<DepoBilgi> _DepoBilgi;

        private EntityRef<Personel> _Personel;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnDMIDChanging(int value);
        partial void OnDMIDChanged();
        partial void OnTarihChanging(System.DateTime value);
        partial void OnTarihChanged();
        partial void OnMiktarChanging(int value);
        partial void OnMiktarChanged();
        partial void OnPIDChanging(int value);
        partial void OnPIDChanged();
        #endregion

        public DepoCiki()
        {
            this._DepoBilgi = default( EntityRef<DepoBilgi> );
            this._Personel = default( EntityRef<Personel> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_DMID", DbType="Int NOT NULL" )]
        public int DMID
        {
            get
            {
                return this._DMID;
            }
            set
            {
                if ( ( this._DMID != value ) )
                {
                    if ( this._DepoBilgi.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnDMIDChanging( value );
                    this.SendPropertyChanging();
                    this._DMID = value;
                    this.SendPropertyChanged( "DMID" );
                    this.OnDMIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Tarih", DbType="DateTime NOT NULL" )]
        public System.DateTime Tarih
        {
            get
            {
                return this._Tarih;
            }
            set
            {
                if ( ( this._Tarih != value ) )
                {
                    this.OnTarihChanging( value );
                    this.SendPropertyChanging();
                    this._Tarih = value;
                    this.SendPropertyChanged( "Tarih" );
                    this.OnTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Miktar", DbType="Int NOT NULL" )]
        public int Miktar
        {
            get
            {
                return this._Miktar;
            }
            set
            {
                if ( ( this._Miktar != value ) )
                {
                    this.OnMiktarChanging( value );
                    this.SendPropertyChanging();
                    this._Miktar = value;
                    this.SendPropertyChanged( "Miktar" );
                    this.OnMiktarChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_PID", DbType="Int NOT NULL" )]
        public int PID
        {
            get
            {
                return this._PID;
            }
            set
            {
                if ( ( this._PID != value ) )
                {
                    if ( this._Personel.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnPIDChanging( value );
                    this.SendPropertyChanging();
                    this._PID = value;
                    this.SendPropertyChanged( "PID" );
                    this.OnPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="DepoBilgi_DepoCiki", Storage="_DepoBilgi", ThisKey="DMID", OtherKey="ID", IsForeignKey=true )]
        public DepoBilgi DepoBilgi
        {
            get
            {
                return this._DepoBilgi.Entity;
            }
            set
            {
                DepoBilgi previousValue = this._DepoBilgi.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._DepoBilgi.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._DepoBilgi.Entity = null;
                        previousValue.DepoCikis.Remove( this );
                    }
                    this._DepoBilgi.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.DepoCikis.Add( this );
                        this._DMID = value.ID;
                    }
                    else
                    {
                        this._DMID = default( int );
                    }
                    this.SendPropertyChanged( "DepoBilgi" );
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_DepoCiki", Storage="_Personel", ThisKey="PID", OtherKey="ID", IsForeignKey=true )]
        public Personel Personel
        {
            get
            {
                return this._Personel.Entity;
            }
            set
            {
                Personel previousValue = this._Personel.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Personel.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Personel.Entity = null;
                        previousValue.DepoCikis.Remove( this );
                    }
                    this._Personel.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.DepoCikis.Add( this );
                        this._PID = value.ID;
                    }
                    else
                    {
                        this._PID = default( int );
                    }
                    this.SendPropertyChanged( "Personel" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Ekip" )]
    public partial class Ekip : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Ad;

        private bool _Aktif;

        public override string ToString()
        {
            return Ad;
        }

        private EntitySet<ERapor> _ERapors;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        partial void OnAktifChanging(bool value);
        partial void OnAktifChanged();
        #endregion

        public Ekip()
        {
            this._ERapors = new EntitySet<ERapor>( new Action<ERapor>( this.attach_ERapors ), new Action<ERapor>( this.detach_ERapors ) );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Aktif", DbType="Bit NOT NULL" )]
        public bool Aktif
        {
            get
            {
                return this._Aktif;
            }
            set
            {
                if ( ( this._Aktif != value ) )
                {
                    this.OnAktifChanging( value );
                    this.SendPropertyChanging();
                    this._Aktif = value;
                    this.SendPropertyChanged( "Aktif" );
                    this.OnAktifChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Ekip_ERapor", Storage="_ERapors", ThisKey="ID", OtherKey="E_ID" )]
        public EntitySet<ERapor> ERapors
        {
            get
            {
                return this._ERapors;
            }
            set
            {
                this._ERapors.Assign( value );
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_ERapors(ERapor entity)
        {
            this.SendPropertyChanging();
            entity.Ekip = this;
        }

        private void detach_ERapors(ERapor entity)
        {
            this.SendPropertyChanging();
            entity.Ekip = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.ERapor" )]
    public partial class ERapor : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _E_ID;

        private System.DateTime _Tarih;

        private string _Rapor;

        public override string ToString()
        {
            return Ekip.Ad+" "+Tarih.ToShortDateString();
        }

        private EntityRef<Ekip> _Ekip;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnE_IDChanging(int value);
        partial void OnE_IDChanged();
        partial void OnTarihChanging(System.DateTime value);
        partial void OnTarihChanged();
        partial void OnRaporChanging(string value);
        partial void OnRaporChanged();
        #endregion

        public ERapor()
        {
            this._Ekip = default( EntityRef<Ekip> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_E_ID", DbType="Int NOT NULL" )]
        public int E_ID
        {
            get
            {
                return this._E_ID;
            }
            set
            {
                if ( ( this._E_ID != value ) )
                {
                    if ( this._Ekip.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnE_IDChanging( value );
                    this.SendPropertyChanging();
                    this._E_ID = value;
                    this.SendPropertyChanged( "E_ID" );
                    this.OnE_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Tarih", DbType="DateTime NOT NULL" )]
        public System.DateTime Tarih
        {
            get
            {
                return this._Tarih;
            }
            set
            {
                if ( ( this._Tarih != value ) )
                {
                    this.OnTarihChanging( value );
                    this.SendPropertyChanging();
                    this._Tarih = value;
                    this.SendPropertyChanged( "Tarih" );
                    this.OnTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Rapor", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never )]
        public string Rapor
        {
            get
            {
                return this._Rapor;
            }
            set
            {
                if ( ( this._Rapor != value ) )
                {
                    this.OnRaporChanging( value );
                    this.SendPropertyChanging();
                    this._Rapor = value;
                    this.SendPropertyChanged( "Rapor" );
                    this.OnRaporChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Ekip_ERapor", Storage="_Ekip", ThisKey="E_ID", OtherKey="ID", IsForeignKey=true )]
        public Ekip Ekip
        {
            get
            {
                return this._Ekip.Entity;
            }
            set
            {
                Ekip previousValue = this._Ekip.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Ekip.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Ekip.Entity = null;
                        previousValue.ERapors.Remove( this );
                    }
                    this._Ekip.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.ERapors.Add( this );
                        this._E_ID = value.ID;
                    }
                    else
                    {
                        this._E_ID = default( int );
                    }
                    this.SendPropertyChanged( "Ekip" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Gorev" )]
    public partial class Gorev : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Ad;

        private bool _Aktif;

        public override string ToString()
        {
            return Ad;
        }

        private EntitySet<Personel> _Personels;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        partial void OnAktifChanging(bool value);
        partial void OnAktifChanged();
        #endregion

        public Gorev()
        {
            this._Personels = new EntitySet<Personel>( new Action<Personel>( this.attach_Personels ), new Action<Personel>( this.detach_Personels ) );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Aktif", DbType="Bit NOT NULL" )]
        public bool Aktif
        {
            get
            {
                return this._Aktif;
            }
            set
            {
                if ( ( this._Aktif != value ) )
                {
                    this.OnAktifChanging( value );
                    this.SendPropertyChanging();
                    this._Aktif = value;
                    this.SendPropertyChanged( "Aktif" );
                    this.OnAktifChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Gorev_Personel", Storage="_Personels", ThisKey="ID", OtherKey="Gorev" )]
        public EntitySet<Personel> Personels
        {
            get
            {
                return this._Personels;
            }
            set
            {
                this._Personels.Assign( value );
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_Personels(Personel entity)
        {
            this.SendPropertyChanging();
            entity.Gorev1 = this;
        }

        private void detach_Personels(Personel entity)
        {
            this.SendPropertyChanging();
            entity.Gorev1 = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Hata" )]
    public partial class Hata : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Metod;

        private string _TamKonum;

        private string _Mesaj;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMetodChanging(string value);
        partial void OnMetodChanged();
        partial void OnTamKonumChanging(string value);
        partial void OnTamKonumChanged();
        partial void OnMesajChanging(string value);
        partial void OnMesajChanged();
        #endregion

        public Hata()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Metod", DbType="NChar(300) NOT NULL", CanBeNull=false )]
        public string Metod
        {
            get
            {
                return this._Metod;
            }
            set
            {
                if ( ( this._Metod != value ) )
                {
                    this.OnMetodChanging( value );
                    this.SendPropertyChanging();
                    this._Metod = value;
                    this.SendPropertyChanged( "Metod" );
                    this.OnMetodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_TamKonum", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never )]
        public string TamKonum
        {
            get
            {
                return this._TamKonum;
            }
            set
            {
                if ( ( this._TamKonum != value ) )
                {
                    this.OnTamKonumChanging( value );
                    this.SendPropertyChanging();
                    this._TamKonum = value;
                    this.SendPropertyChanged( "TamKonum" );
                    this.OnTamKonumChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Mesaj", DbType="NVarChar(500) NOT NULL", CanBeNull=false )]
        public string Mesaj
        {
            get
            {
                return this._Mesaj;
            }
            set
            {
                if ( ( this._Mesaj != value ) )
                {
                    this.OnMesajChanging( value );
                    this.SendPropertyChanging();
                    this._Mesaj = value;
                    this.SendPropertyChanged( "Mesaj" );
                    this.OnMesajChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Hatirlatma" )]
    public partial class Hatirlatma : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private System.Nullable<System.DateTime> _Tarih;

        private string _Metin;

        private bool _Yapildi;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnTarihChanging(System.Nullable<System.DateTime> value);
        partial void OnTarihChanged();
        partial void OnMetinChanging(string value);
        partial void OnMetinChanged();
        partial void OnYapildiChanging(bool value);
        partial void OnYapildiChanged();
        #endregion

        public Hatirlatma()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Tarih", DbType="DateTime" )]
        public System.Nullable<System.DateTime> Tarih
        {
            get
            {
                return this._Tarih;
            }
            set
            {
                if ( ( this._Tarih != value ) )
                {
                    this.OnTarihChanging( value );
                    this.SendPropertyChanging();
                    this._Tarih = value;
                    this.SendPropertyChanged( "Tarih" );
                    this.OnTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Metin", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never )]
        public string Metin
        {
            get
            {
                return this._Metin;
            }
            set
            {
                if ( ( this._Metin != value ) )
                {
                    this.OnMetinChanging( value );
                    this.SendPropertyChanging();
                    this._Metin = value;
                    this.SendPropertyChanged( "Metin" );
                    this.OnMetinChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Yapildi", DbType="Bit NOT NULL" )]
        public bool Yapildi
        {
            get
            {
                return this._Yapildi;
            }
            set
            {
                if ( ( this._Yapildi != value ) )
                {
                    this.OnYapildiChanging( value );
                    this.SendPropertyChanging();
                    this._Yapildi = value;
                    this.SendPropertyChanged( "Yapildi" );
                    this.OnYapildiChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Izin" )]
    public partial class Izin : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _P_ID;

        private int _IzinUzunlık;

        private System.DateTime _ATarih;

        private System.DateTime _DTarih;

        private bool _Ucretlilik;

        private string _INeden;

        private EntityRef<Personel> _Personel;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnP_IDChanging(int value);
        partial void OnP_IDChanged();
        partial void OnIzinUzunlıkChanging(int value);
        partial void OnIzinUzunlıkChanged();
        partial void OnATarihChanging(System.DateTime value);
        partial void OnATarihChanged();
        partial void OnDTarihChanging(System.DateTime value);
        partial void OnDTarihChanged();
        partial void OnUcretlilikChanging(bool value);
        partial void OnUcretlilikChanged();
        partial void OnINedenChanging(string value);
        partial void OnINedenChanged();
        #endregion

        public Izin()
        {
            this._Personel = default( EntityRef<Personel> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_P_ID", DbType="Int NOT NULL" )]
        public int P_ID
        {
            get
            {
                return this._P_ID;
            }
            set
            {
                if ( ( this._P_ID != value ) )
                {
                    if ( this._Personel.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnP_IDChanging( value );
                    this.SendPropertyChanging();
                    this._P_ID = value;
                    this.SendPropertyChanged( "P_ID" );
                    this.OnP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_IzinUzunlık", DbType="Int NOT NULL" )]
        public int IzinUzunlık
        {
            get
            {
                return this._IzinUzunlık;
            }
            set
            {
                if ( ( this._IzinUzunlık != value ) )
                {
                    this.OnIzinUzunlıkChanging( value );
                    this.SendPropertyChanging();
                    this._IzinUzunlık = value;
                    this.SendPropertyChanged( "IzinUzunlık" );
                    this.OnIzinUzunlıkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ATarih", DbType="Date NOT NULL" )]
        public System.DateTime ATarih
        {
            get
            {
                return this._ATarih;
            }
            set
            {
                if ( ( this._ATarih != value ) )
                {
                    this.OnATarihChanging( value );
                    this.SendPropertyChanging();
                    this._ATarih = value;
                    this.SendPropertyChanged( "ATarih" );
                    this.OnATarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_DTarih", DbType="Date NOT NULL" )]
        public System.DateTime DTarih
        {
            get
            {
                return this._DTarih;
            }
            set
            {
                if ( ( this._DTarih != value ) )
                {
                    this.OnDTarihChanging( value );
                    this.SendPropertyChanging();
                    this._DTarih = value;
                    this.SendPropertyChanged( "DTarih" );
                    this.OnDTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ucretlilik", DbType="Bit NOT NULL" )]
        public bool Ucretlilik
        {
            get
            {
                return this._Ucretlilik;
            }
            set
            {
                if ( ( this._Ucretlilik != value ) )
                {
                    this.OnUcretlilikChanging( value );
                    this.SendPropertyChanging();
                    this._Ucretlilik = value;
                    this.SendPropertyChanged( "Ucretlilik" );
                    this.OnUcretlilikChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_INeden", DbType="NVarChar(200) NOT NULL", CanBeNull=false )]
        public string INeden
        {
            get
            {
                return this._INeden;
            }
            set
            {
                if ( ( this._INeden != value ) )
                {
                    this.OnINedenChanging( value );
                    this.SendPropertyChanging();
                    this._INeden = value;
                    this.SendPropertyChanged( "INeden" );
                    this.OnINedenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_Izin", Storage="_Personel", ThisKey="P_ID", OtherKey="ID", IsForeignKey=true )]
        public Personel Personel
        {
            get
            {
                return this._Personel.Entity;
            }
            set
            {
                Personel previousValue = this._Personel.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Personel.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Personel.Entity = null;
                        previousValue.Izins.Remove( this );
                    }
                    this._Personel.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.Izins.Add( this );
                        this._P_ID = value.ID;
                    }
                    else
                    {
                        this._P_ID = default( int );
                    }
                    this.SendPropertyChanged( "Personel" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.MalzameTip" )]
    public partial class MalzameTip : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Ad;

        private bool _Aktif;

        public override string ToString()
        {
            return Ad;
        }

        private EntitySet<DepoBilgi> _DepoBilgis;

        private EntitySet<MotorluMalzame> _MotorluMalzames;

        private EntitySet<OParkMalzeme> _OParkMalzemes;

        private EntitySet<SulamaMalzeme> _SulamaMalzemes;

        private EntitySet<TasimaArac> _TasimaAracs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        partial void OnAktifChanging(bool value);
        partial void OnAktifChanged();
        #endregion

        public MalzameTip()
        {
            this._DepoBilgis = new EntitySet<DepoBilgi>( new Action<DepoBilgi>( this.attach_DepoBilgis ), new Action<DepoBilgi>( this.detach_DepoBilgis ) );
            this._MotorluMalzames = new EntitySet<MotorluMalzame>( new Action<MotorluMalzame>( this.attach_MotorluMalzames ), new Action<MotorluMalzame>( this.detach_MotorluMalzames ) );
            this._OParkMalzemes = new EntitySet<OParkMalzeme>( new Action<OParkMalzeme>( this.attach_OParkMalzemes ), new Action<OParkMalzeme>( this.detach_OParkMalzemes ) );
            this._SulamaMalzemes = new EntitySet<SulamaMalzeme>( new Action<SulamaMalzeme>( this.attach_SulamaMalzemes ), new Action<SulamaMalzeme>( this.detach_SulamaMalzemes ) );
            this._TasimaAracs = new EntitySet<TasimaArac>( new Action<TasimaArac>( this.attach_TasimaAracs ), new Action<TasimaArac>( this.detach_TasimaAracs ) );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Aktif", DbType="Bit NOT NULL" )]
        public bool Aktif
        {
            get
            {
                return this._Aktif;
            }
            set
            {
                if ( ( this._Aktif != value ) )
                {
                    this.OnAktifChanging( value );
                    this.SendPropertyChanging();
                    this._Aktif = value;
                    this.SendPropertyChanged( "Aktif" );
                    this.OnAktifChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_DepoBilgi", Storage="_DepoBilgis", ThisKey="ID", OtherKey="MTipID" )]
        public EntitySet<DepoBilgi> DepoBilgis
        {
            get
            {
                return this._DepoBilgis;
            }
            set
            {
                this._DepoBilgis.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_MotorluMalzame", Storage="_MotorluMalzames", ThisKey="ID", OtherKey="MTipID" )]
        public EntitySet<MotorluMalzame> MotorluMalzames
        {
            get
            {
                return this._MotorluMalzames;
            }
            set
            {
                this._MotorluMalzames.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_OParkMalzeme", Storage="_OParkMalzemes", ThisKey="ID", OtherKey="MID" )]
        public EntitySet<OParkMalzeme> OParkMalzemes
        {
            get
            {
                return this._OParkMalzemes;
            }
            set
            {
                this._OParkMalzemes.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_SulamaMalzeme", Storage="_SulamaMalzemes", ThisKey="ID", OtherKey="MTipID" )]
        public EntitySet<SulamaMalzeme> SulamaMalzemes
        {
            get
            {
                return this._SulamaMalzemes;
            }
            set
            {
                this._SulamaMalzemes.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_TasimaArac", Storage="_TasimaAracs", ThisKey="ID", OtherKey="MTipID" )]
        public EntitySet<TasimaArac> TasimaAracs
        {
            get
            {
                return this._TasimaAracs;
            }
            set
            {
                this._TasimaAracs.Assign( value );
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_DepoBilgis(DepoBilgi entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = this;
        }

        private void detach_DepoBilgis(DepoBilgi entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = null;
        }

        private void attach_MotorluMalzames(MotorluMalzame entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = this;
        }

        private void detach_MotorluMalzames(MotorluMalzame entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = null;
        }

        private void attach_OParkMalzemes(OParkMalzeme entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = this;
        }

        private void detach_OParkMalzemes(OParkMalzeme entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = null;
        }

        private void attach_SulamaMalzemes(SulamaMalzeme entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = this;
        }

        private void detach_SulamaMalzemes(SulamaMalzeme entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = null;
        }

        private void attach_TasimaAracs(TasimaArac entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = this;
        }

        private void detach_TasimaAracs(TasimaArac entity)
        {
            this.SendPropertyChanging();
            entity.MalzameTip = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.MotorluMalzame" )]
    public partial class MotorluMalzame : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _MTipID;

        private System.Nullable<double> _Verim;

        private System.DateTime _STarih;

        private System.Nullable<System.DateTime> _SilmeTarih;

        private bool _Aktif;

        public override string ToString()
        {
            return MalzameTip.Ad;
        }

        private EntityRef<MalzameTip> _MalzameTip;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMTipIDChanging(int value);
        partial void OnMTipIDChanged();
        partial void OnVerimChanging(System.Nullable<double> value);
        partial void OnVerimChanged();
        partial void OnSTarihChanging(System.DateTime value);
        partial void OnSTarihChanged();
        partial void OnSilmeTarihChanging(System.Nullable<System.DateTime> value);
        partial void OnSilmeTarihChanged();
        partial void OnAktifChanging(bool value);
        partial void OnAktifChanged();
        #endregion

        public MotorluMalzame()
        {
            this._MalzameTip = default( EntityRef<MalzameTip> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_MTipID", DbType="Int NOT NULL" )]
        public int MTipID
        {
            get
            {
                return this._MTipID;
            }
            set
            {
                if ( ( this._MTipID != value ) )
                {
                    if ( this._MalzameTip.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMTipIDChanging( value );
                    this.SendPropertyChanging();
                    this._MTipID = value;
                    this.SendPropertyChanged( "MTipID" );
                    this.OnMTipIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Verim", DbType="Float" )]
        public System.Nullable<double> Verim
        {
            get
            {
                return this._Verim;
            }
            set
            {
                if ( ( this._Verim != value ) )
                {
                    this.OnVerimChanging( value );
                    this.SendPropertyChanging();
                    this._Verim = value;
                    this.SendPropertyChanged( "Verim" );
                    this.OnVerimChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_STarih", DbType="Date NOT NULL" )]
        public System.DateTime STarih
        {
            get
            {
                return this._STarih;
            }
            set
            {
                if ( ( this._STarih != value ) )
                {
                    this.OnSTarihChanging( value );
                    this.SendPropertyChanging();
                    this._STarih = value;
                    this.SendPropertyChanged( "STarih" );
                    this.OnSTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_SilmeTarih", DbType="Date" )]
        public System.Nullable<System.DateTime> SilmeTarih
        {
            get
            {
                return this._SilmeTarih;
            }
            set
            {
                if ( ( this._SilmeTarih != value ) )
                {
                    this.OnSilmeTarihChanging( value );
                    this.SendPropertyChanging();
                    this._SilmeTarih = value;
                    this.SendPropertyChanged( "SilmeTarih" );
                    this.OnSilmeTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Aktif", DbType="Bit NOT NULL" )]
        public bool Aktif
        {
            get
            {
                return this._Aktif;
            }
            set
            {
                if ( ( this._Aktif != value ) )
                {
                    this.OnAktifChanging( value );
                    this.SendPropertyChanging();
                    this._Aktif = value;
                    this.SendPropertyChanged( "Aktif" );
                    this.OnAktifChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_MotorluMalzame", Storage="_MalzameTip", ThisKey="MTipID", OtherKey="ID", IsForeignKey=true )]
        public MalzameTip MalzameTip
        {
            get
            {
                return this._MalzameTip.Entity;
            }
            set
            {
                MalzameTip previousValue = this._MalzameTip.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._MalzameTip.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._MalzameTip.Entity = null;
                        previousValue.MotorluMalzames.Remove( this );
                    }
                    this._MalzameTip.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.MotorluMalzames.Add( this );
                        this._MTipID = value.ID;
                    }
                    else
                    {
                        this._MTipID = default( int );
                    }
                    this.SendPropertyChanged( "MalzameTip" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.OPAriza" )]
    public partial class OPAriza : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _OPMID;

        private string _Rapor;

        private System.DateTime _Tarih;

        private EntityRef<OParkMalzeme> _OParkMalzeme;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnOPMIDChanging(int value);
        partial void OnOPMIDChanged();
        partial void OnRaporChanging(string value);
        partial void OnRaporChanged();
        partial void OnTarihChanging(System.DateTime value);
        partial void OnTarihChanged();
        #endregion

        public OPAriza()
        {
            this._OParkMalzeme = default( EntityRef<OParkMalzeme> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_OPMID", DbType="Int NOT NULL" )]
        public int OPMID
        {
            get
            {
                return this._OPMID;
            }
            set
            {
                if ( ( this._OPMID != value ) )
                {
                    if ( this._OParkMalzeme.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnOPMIDChanging( value );
                    this.SendPropertyChanging();
                    this._OPMID = value;
                    this.SendPropertyChanged( "OPMID" );
                    this.OnOPMIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Rapor", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never )]
        public string Rapor
        {
            get
            {
                return this._Rapor;
            }
            set
            {
                if ( ( this._Rapor != value ) )
                {
                    this.OnRaporChanging( value );
                    this.SendPropertyChanging();
                    this._Rapor = value;
                    this.SendPropertyChanged( "Rapor" );
                    this.OnRaporChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Tarih", DbType="DateTime NOT NULL" )]
        public System.DateTime Tarih
        {
            get
            {
                return this._Tarih;
            }
            set
            {
                if ( ( this._Tarih != value ) )
                {
                    this.OnTarihChanging( value );
                    this.SendPropertyChanging();
                    this._Tarih = value;
                    this.SendPropertyChanged( "Tarih" );
                    this.OnTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="OParkMalzeme_OPAriza", Storage="_OParkMalzeme", ThisKey="OPMID", OtherKey="ID", IsForeignKey=true )]
        public OParkMalzeme OParkMalzeme
        {
            get
            {
                return this._OParkMalzeme.Entity;
            }
            set
            {
                OParkMalzeme previousValue = this._OParkMalzeme.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._OParkMalzeme.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._OParkMalzeme.Entity = null;
                        previousValue.OPArizas.Remove( this );
                    }
                    this._OParkMalzeme.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.OPArizas.Add( this );
                        this._OPMID = value.ID;
                    }
                    else
                    {
                        this._OPMID = default( int );
                    }
                    this.SendPropertyChanged( "OParkMalzeme" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.OParkMalzeme" )]
    public partial class OParkMalzeme : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _MID;

        private int _OParkID;

        private int _Adet;

        private EntitySet<OPAriza> _OPArizas;

        private EntityRef<MalzameTip> _MalzameTip;

        private EntityRef<OyunPark> _OyunPark;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMIDChanging(int value);
        partial void OnMIDChanged();
        partial void OnOParkIDChanging(int value);
        partial void OnOParkIDChanged();
        partial void OnAdetChanging(int value);
        partial void OnAdetChanged();
        #endregion

        public OParkMalzeme()
        {
            this._OPArizas = new EntitySet<OPAriza>( new Action<OPAriza>( this.attach_OPArizas ), new Action<OPAriza>( this.detach_OPArizas ) );
            this._MalzameTip = default( EntityRef<MalzameTip> );
            this._OyunPark = default( EntityRef<OyunPark> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_MID", DbType="Int NOT NULL" )]
        public int MID
        {
            get
            {
                return this._MID;
            }
            set
            {
                if ( ( this._MID != value ) )
                {
                    if ( this._MalzameTip.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMIDChanging( value );
                    this.SendPropertyChanging();
                    this._MID = value;
                    this.SendPropertyChanged( "MID" );
                    this.OnMIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_OParkID", DbType="Int NOT NULL" )]
        public int OParkID
        {
            get
            {
                return this._OParkID;
            }
            set
            {
                if ( ( this._OParkID != value ) )
                {
                    if ( this._OyunPark.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnOParkIDChanging( value );
                    this.SendPropertyChanging();
                    this._OParkID = value;
                    this.SendPropertyChanged( "OParkID" );
                    this.OnOParkIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Adet", DbType="Int NOT NULL" )]
        public int Adet
        {
            get
            {
                return this._Adet;
            }
            set
            {
                if ( ( this._Adet != value ) )
                {
                    this.OnAdetChanging( value );
                    this.SendPropertyChanging();
                    this._Adet = value;
                    this.SendPropertyChanged( "Adet" );
                    this.OnAdetChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="OParkMalzeme_OPAriza", Storage="_OPArizas", ThisKey="ID", OtherKey="OPMID" )]
        public EntitySet<OPAriza> OPArizas
        {
            get
            {
                return this._OPArizas;
            }
            set
            {
                this._OPArizas.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_OParkMalzeme", Storage="_MalzameTip", ThisKey="MID", OtherKey="ID", IsForeignKey=true )]
        public MalzameTip MalzameTip
        {
            get
            {
                return this._MalzameTip.Entity;
            }
            set
            {
                MalzameTip previousValue = this._MalzameTip.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._MalzameTip.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._MalzameTip.Entity = null;
                        previousValue.OParkMalzemes.Remove( this );
                    }
                    this._MalzameTip.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.OParkMalzemes.Add( this );
                        this._MID = value.ID;
                    }
                    else
                    {
                        this._MID = default( int );
                    }
                    this.SendPropertyChanged( "MalzameTip" );
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="OyunPark_OParkMalzeme", Storage="_OyunPark", ThisKey="OParkID", OtherKey="ID", IsForeignKey=true )]
        public OyunPark OyunPark
        {
            get
            {
                return this._OyunPark.Entity;
            }
            set
            {
                OyunPark previousValue = this._OyunPark.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._OyunPark.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._OyunPark.Entity = null;
                        previousValue.OParkMalzemes.Remove( this );
                    }
                    this._OyunPark.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.OParkMalzemes.Add( this );
                        this._OParkID = value.ID;
                    }
                    else
                    {
                        this._OParkID = default( int );
                    }
                    this.SendPropertyChanged( "OyunPark" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_OPArizas(OPAriza entity)
        {
            this.SendPropertyChanging();
            entity.OParkMalzeme = this;
        }

        private void detach_OPArizas(OPAriza entity)
        {
            this.SendPropertyChanging();
            entity.OParkMalzeme = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.OyunPark" )]
    public partial class OyunPark : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Ad;

        private int _Alan;

        public override string ToString()
        {
            return Ad;
        }

        private EntitySet<OParkMalzeme> _OParkMalzemes;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        partial void OnAlanChanging(int value);
        partial void OnAlanChanged();
        #endregion

        public OyunPark()
        {
            this._OParkMalzemes = new EntitySet<OParkMalzeme>( new Action<OParkMalzeme>( this.attach_OParkMalzemes ), new Action<OParkMalzeme>( this.detach_OParkMalzemes ) );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(100) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Alan", DbType="Int NOT NULL" )]
        public int Alan
        {
            get
            {
                return this._Alan;
            }
            set
            {
                if ( ( this._Alan != value ) )
                {
                    this.OnAlanChanging( value );
                    this.SendPropertyChanging();
                    this._Alan = value;
                    this.SendPropertyChanged( "Alan" );
                    this.OnAlanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="OyunPark_OParkMalzeme", Storage="_OParkMalzemes", ThisKey="ID", OtherKey="OParkID" )]
        public EntitySet<OParkMalzeme> OParkMalzemes
        {
            get
            {
                return this._OParkMalzemes;
            }
            set
            {
                this._OParkMalzemes.Assign( value );
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_OParkMalzemes(OParkMalzeme entity)
        {
            this.SendPropertyChanging();
            entity.OyunPark = this;
        }

        private void detach_OParkMalzemes(OParkMalzeme entity)
        {
            this.SendPropertyChanging();
            entity.OyunPark = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Park" )]
    public partial class Park : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Ad;

        private int _Cim;

        private int _IgneAgac;

        private int _GenisAgac;

        private int _YuruyusPark;

        private bool _WC;

        private bool _Mescid;

        private int _PiknikAlan;

        private int _BisikletYol;

        private int _CesmeAdet;

        private System.DateTime _AcilisTarih;

        public override string ToString()
        {
            return Ad;
        }

        private EntitySet<Personel> _Personels;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        partial void OnCimChanging(int value);
        partial void OnCimChanged();
        partial void OnIgneAgacChanging(int value);
        partial void OnIgneAgacChanged();
        partial void OnGenisAgacChanging(int value);
        partial void OnGenisAgacChanged();
        partial void OnYuruyusParkChanging(int value);
        partial void OnYuruyusParkChanged();
        partial void OnWCChanging(bool value);
        partial void OnWCChanged();
        partial void OnMescidChanging(bool value);
        partial void OnMescidChanged();
        partial void OnPiknikAlanChanging(int value);
        partial void OnPiknikAlanChanged();
        partial void OnBisikletYolChanging(int value);
        partial void OnBisikletYolChanged();
        partial void OnCesmeAdetChanging(int value);
        partial void OnCesmeAdetChanged();
        partial void OnAcilisTarihChanging(System.DateTime value);
        partial void OnAcilisTarihChanged();
        #endregion

        public Park()
        {
            this._Personels = new EntitySet<Personel>( new Action<Personel>( this.attach_Personels ), new Action<Personel>( this.detach_Personels ) );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(100) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Cim", DbType="Int NOT NULL" )]
        public int Cim
        {
            get
            {
                return this._Cim;
            }
            set
            {
                if ( ( this._Cim != value ) )
                {
                    this.OnCimChanging( value );
                    this.SendPropertyChanging();
                    this._Cim = value;
                    this.SendPropertyChanged( "Cim" );
                    this.OnCimChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_IgneAgac", DbType="Int NOT NULL" )]
        public int IgneAgac
        {
            get
            {
                return this._IgneAgac;
            }
            set
            {
                if ( ( this._IgneAgac != value ) )
                {
                    this.OnIgneAgacChanging( value );
                    this.SendPropertyChanging();
                    this._IgneAgac = value;
                    this.SendPropertyChanged( "IgneAgac" );
                    this.OnIgneAgacChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_GenisAgac", DbType="Int NOT NULL" )]
        public int GenisAgac
        {
            get
            {
                return this._GenisAgac;
            }
            set
            {
                if ( ( this._GenisAgac != value ) )
                {
                    this.OnGenisAgacChanging( value );
                    this.SendPropertyChanging();
                    this._GenisAgac = value;
                    this.SendPropertyChanged( "GenisAgac" );
                    this.OnGenisAgacChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_YuruyusPark", DbType="Int NOT NULL" )]
        public int YuruyusPark
        {
            get
            {
                return this._YuruyusPark;
            }
            set
            {
                if ( ( this._YuruyusPark != value ) )
                {
                    this.OnYuruyusParkChanging( value );
                    this.SendPropertyChanging();
                    this._YuruyusPark = value;
                    this.SendPropertyChanged( "YuruyusPark" );
                    this.OnYuruyusParkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_WC", DbType="Bit NOT NULL" )]
        public bool WC
        {
            get
            {
                return this._WC;
            }
            set
            {
                if ( ( this._WC != value ) )
                {
                    this.OnWCChanging( value );
                    this.SendPropertyChanging();
                    this._WC = value;
                    this.SendPropertyChanged( "WC" );
                    this.OnWCChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Mescid", DbType="Bit NOT NULL" )]
        public bool Mescid
        {
            get
            {
                return this._Mescid;
            }
            set
            {
                if ( ( this._Mescid != value ) )
                {
                    this.OnMescidChanging( value );
                    this.SendPropertyChanging();
                    this._Mescid = value;
                    this.SendPropertyChanged( "Mescid" );
                    this.OnMescidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_PiknikAlan", DbType="Int NOT NULL" )]
        public int PiknikAlan
        {
            get
            {
                return this._PiknikAlan;
            }
            set
            {
                if ( ( this._PiknikAlan != value ) )
                {
                    this.OnPiknikAlanChanging( value );
                    this.SendPropertyChanging();
                    this._PiknikAlan = value;
                    this.SendPropertyChanged( "PiknikAlan" );
                    this.OnPiknikAlanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_BisikletYol", DbType="Int NOT NULL" )]
        public int BisikletYol
        {
            get
            {
                return this._BisikletYol;
            }
            set
            {
                if ( ( this._BisikletYol != value ) )
                {
                    this.OnBisikletYolChanging( value );
                    this.SendPropertyChanging();
                    this._BisikletYol = value;
                    this.SendPropertyChanged( "BisikletYol" );
                    this.OnBisikletYolChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_CesmeAdet", DbType="Int NOT NULL" )]
        public int CesmeAdet
        {
            get
            {
                return this._CesmeAdet;
            }
            set
            {
                if ( ( this._CesmeAdet != value ) )
                {
                    this.OnCesmeAdetChanging( value );
                    this.SendPropertyChanging();
                    this._CesmeAdet = value;
                    this.SendPropertyChanged( "CesmeAdet" );
                    this.OnCesmeAdetChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_AcilisTarih", DbType="Date NOT NULL" )]
        public System.DateTime AcilisTarih
        {
            get
            {
                return this._AcilisTarih;
            }
            set
            {
                if ( ( this._AcilisTarih != value ) )
                {
                    this.OnAcilisTarihChanging( value );
                    this.SendPropertyChanging();
                    this._AcilisTarih = value;
                    this.SendPropertyChanged( "AcilisTarih" );
                    this.OnAcilisTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Park_Personel", Storage="_Personels", ThisKey="ID", OtherKey="G_Yer" )]
        public EntitySet<Personel> Personels
        {
            get
            {
                return this._Personels;
            }
            set
            {
                this._Personels.Assign( value );
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_Personels(Personel entity)
        {
            this.SendPropertyChanging();
            entity.Park = this;
        }

        private void detach_Personels(Personel entity)
        {
            this.SendPropertyChanging();
            entity.Park = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Personel" )]
    public partial class Personel : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Kimlik;

        private string _Ad;

        private string _Soyad;

        private string _Baba;

        private string _Anne;

        private int _D_Yer;

        private System.DateTime _D_Tarih;

        private string _Kan;

        private string _Telefon;

        private int _Ust;

        private int _Gorev;

        private System.Nullable<int> _G_Yer;

        private System.DateTime _Giris;

        private System.Nullable<System.DateTime> _Ayrilma;

        private bool _Aktif;

        public override string ToString()
        {
            return Ad+" "+Soyad;
        }

        private EntitySet<DepoCiki> _DepoCikis;

        private EntitySet<Izin> _Izins;

        private EntitySet<SatinAlma> _SatinAlmas;

        private EntitySet<TasimaArac> _TasimaAracs;

        private EntityRef<Gorev> _Gorev1;

        private EntityRef<Park> _Park;

        private EntityRef<Sehir> _Sehir;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnKimlikChanging(string value);
        partial void OnKimlikChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        partial void OnSoyadChanging(string value);
        partial void OnSoyadChanged();
        partial void OnBabaChanging(string value);
        partial void OnBabaChanged();
        partial void OnAnneChanging(string value);
        partial void OnAnneChanged();
        partial void OnD_YerChanging(int value);
        partial void OnD_YerChanged();
        partial void OnD_TarihChanging(System.DateTime value);
        partial void OnD_TarihChanged();
        partial void OnKanChanging(string value);
        partial void OnKanChanged();
        partial void OnTelefonChanging(string value);
        partial void OnTelefonChanged();
        partial void OnUstChanging(int value);
        partial void OnUstChanged();
        partial void OnGorevChanging(int value);
        partial void OnGorevChanged();
        partial void OnG_YerChanging(System.Nullable<int> value);
        partial void OnG_YerChanged();
        partial void OnGirisChanging(System.DateTime value);
        partial void OnGirisChanged();
        partial void OnAyrilmaChanging(System.Nullable<System.DateTime> value);
        partial void OnAyrilmaChanged();
        partial void OnAktifChanging(bool value);
        partial void OnAktifChanged();
        #endregion

        public Personel()
        {
            this._DepoCikis = new EntitySet<DepoCiki>( new Action<DepoCiki>( this.attach_DepoCikis ), new Action<DepoCiki>( this.detach_DepoCikis ) );
            this._Izins = new EntitySet<Izin>( new Action<Izin>( this.attach_Izins ), new Action<Izin>( this.detach_Izins ) );
            this._SatinAlmas = new EntitySet<SatinAlma>( new Action<SatinAlma>( this.attach_SatinAlmas ), new Action<SatinAlma>( this.detach_SatinAlmas ) );
            this._TasimaAracs = new EntitySet<TasimaArac>( new Action<TasimaArac>( this.attach_TasimaAracs ), new Action<TasimaArac>( this.detach_TasimaAracs ) );
            this._Gorev1 = default( EntityRef<Gorev> );
            this._Park = default( EntityRef<Park> );
            this._Sehir = default( EntityRef<Sehir> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Kimlik", DbType="Char(11) NOT NULL", CanBeNull=false )]
        public string Kimlik
        {
            get
            {
                return this._Kimlik;
            }
            set
            {
                if ( ( this._Kimlik != value ) )
                {
                    this.OnKimlikChanging( value );
                    this.SendPropertyChanging();
                    this._Kimlik = value;
                    this.SendPropertyChanged( "Kimlik" );
                    this.OnKimlikChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(60) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Soyad", DbType="NVarChar(50) NOT NULL", CanBeNull=false )]
        public string Soyad
        {
            get
            {
                return this._Soyad;
            }
            set
            {
                if ( ( this._Soyad != value ) )
                {
                    this.OnSoyadChanging( value );
                    this.SendPropertyChanging();
                    this._Soyad = value;
                    this.SendPropertyChanged( "Soyad" );
                    this.OnSoyadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Baba", DbType="NVarChar(50) NOT NULL", CanBeNull=false )]
        public string Baba
        {
            get
            {
                return this._Baba;
            }
            set
            {
                if ( ( this._Baba != value ) )
                {
                    this.OnBabaChanging( value );
                    this.SendPropertyChanging();
                    this._Baba = value;
                    this.SendPropertyChanged( "Baba" );
                    this.OnBabaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Anne", DbType="NVarChar(50) NOT NULL", CanBeNull=false )]
        public string Anne
        {
            get
            {
                return this._Anne;
            }
            set
            {
                if ( ( this._Anne != value ) )
                {
                    this.OnAnneChanging( value );
                    this.SendPropertyChanging();
                    this._Anne = value;
                    this.SendPropertyChanged( "Anne" );
                    this.OnAnneChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_D_Yer", DbType="Int NOT NULL" )]
        public int D_Yer
        {
            get
            {
                return this._D_Yer;
            }
            set
            {
                if ( ( this._D_Yer != value ) )
                {
                    if ( this._Sehir.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnD_YerChanging( value );
                    this.SendPropertyChanging();
                    this._D_Yer = value;
                    this.SendPropertyChanged( "D_Yer" );
                    this.OnD_YerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_D_Tarih", DbType="Date NOT NULL" )]
        public System.DateTime D_Tarih
        {
            get
            {
                return this._D_Tarih;
            }
            set
            {
                if ( ( this._D_Tarih != value ) )
                {
                    this.OnD_TarihChanging( value );
                    this.SendPropertyChanging();
                    this._D_Tarih = value;
                    this.SendPropertyChanged( "D_Tarih" );
                    this.OnD_TarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Kan", DbType="Char(9)" )]
        public string Kan
        {
            get
            {
                return this._Kan;
            }
            set
            {
                if ( ( this._Kan != value ) )
                {
                    this.OnKanChanging( value );
                    this.SendPropertyChanging();
                    this._Kan = value;
                    this.SendPropertyChanged( "Kan" );
                    this.OnKanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Telefon", DbType="Char(20) NOT NULL", CanBeNull=false )]
        public string Telefon
        {
            get
            {
                return this._Telefon;
            }
            set
            {
                if ( ( this._Telefon != value ) )
                {
                    this.OnTelefonChanging( value );
                    this.SendPropertyChanging();
                    this._Telefon = value;
                    this.SendPropertyChanged( "Telefon" );
                    this.OnTelefonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ust", DbType="Int NOT NULL" )]
        public int Ust
        {
            get
            {
                return this._Ust;
            }
            set
            {
                if ( ( this._Ust != value ) )
                {
                    this.OnUstChanging( value );
                    this.SendPropertyChanging();
                    this._Ust = value;
                    this.SendPropertyChanged( "Ust" );
                    this.OnUstChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Gorev", DbType="Int NOT NULL" )]
        public int Gorev
        {
            get
            {
                return this._Gorev;
            }
            set
            {
                if ( ( this._Gorev != value ) )
                {
                    if ( this._Gorev1.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnGorevChanging( value );
                    this.SendPropertyChanging();
                    this._Gorev = value;
                    this.SendPropertyChanged( "Gorev" );
                    this.OnGorevChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_G_Yer", DbType="Int" )]
        public System.Nullable<int> G_Yer
        {
            get
            {
                return this._G_Yer;
            }
            set
            {
                if ( ( this._G_Yer != value ) )
                {
                    if ( this._Park.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnG_YerChanging( value );
                    this.SendPropertyChanging();
                    this._G_Yer = value;
                    this.SendPropertyChanged( "G_Yer" );
                    this.OnG_YerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Giris", DbType="Date NOT NULL" )]
        public System.DateTime Giris
        {
            get
            {
                return this._Giris;
            }
            set
            {
                if ( ( this._Giris != value ) )
                {
                    this.OnGirisChanging( value );
                    this.SendPropertyChanging();
                    this._Giris = value;
                    this.SendPropertyChanged( "Giris" );
                    this.OnGirisChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ayrilma", DbType="Date" )]
        public System.Nullable<System.DateTime> Ayrilma
        {
            get
            {
                return this._Ayrilma;
            }
            set
            {
                if ( ( this._Ayrilma != value ) )
                {
                    this.OnAyrilmaChanging( value );
                    this.SendPropertyChanging();
                    this._Ayrilma = value;
                    this.SendPropertyChanged( "Ayrilma" );
                    this.OnAyrilmaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Aktif", DbType="Bit NOT NULL" )]
        public bool Aktif
        {
            get
            {
                return this._Aktif;
            }
            set
            {
                if ( ( this._Aktif != value ) )
                {
                    this.OnAktifChanging( value );
                    this.SendPropertyChanging();
                    this._Aktif = value;
                    this.SendPropertyChanged( "Aktif" );
                    this.OnAktifChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_DepoCiki", Storage="_DepoCikis", ThisKey="ID", OtherKey="PID" )]
        public EntitySet<DepoCiki> DepoCikis
        {
            get
            {
                return this._DepoCikis;
            }
            set
            {
                this._DepoCikis.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_Izin", Storage="_Izins", ThisKey="ID", OtherKey="P_ID" )]
        public EntitySet<Izin> Izins
        {
            get
            {
                return this._Izins;
            }
            set
            {
                this._Izins.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_SatinAlma", Storage="_SatinAlmas", ThisKey="ID", OtherKey="PID" )]
        public EntitySet<SatinAlma> SatinAlmas
        {
            get
            {
                return this._SatinAlmas;
            }
            set
            {
                this._SatinAlmas.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_TasimaArac", Storage="_TasimaAracs", ThisKey="ID", OtherKey="Kimde" )]
        public EntitySet<TasimaArac> TasimaAracs
        {
            get
            {
                return this._TasimaAracs;
            }
            set
            {
                this._TasimaAracs.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Gorev_Personel", Storage="_Gorev1", ThisKey="Gorev", OtherKey="ID", IsForeignKey=true )]
        public Gorev Gorev1
        {
            get
            {
                return this._Gorev1.Entity;
            }
            set
            {
                Gorev previousValue = this._Gorev1.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Gorev1.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Gorev1.Entity = null;
                        previousValue.Personels.Remove( this );
                    }
                    this._Gorev1.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.Personels.Add( this );
                        this._Gorev = value.ID;
                    }
                    else
                    {
                        this._Gorev = default( int );
                    }
                    this.SendPropertyChanged( "Gorev1" );
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Park_Personel", Storage="_Park", ThisKey="G_Yer", OtherKey="ID", IsForeignKey=true )]
        public Park Park
        {
            get
            {
                return this._Park.Entity;
            }
            set
            {
                Park previousValue = this._Park.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Park.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Park.Entity = null;
                        previousValue.Personels.Remove( this );
                    }
                    this._Park.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.Personels.Add( this );
                        this._G_Yer = value.ID;
                    }
                    else
                    {
                        this._G_Yer = default( Nullable<int> );
                    }
                    this.SendPropertyChanged( "Park" );
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Sehir_Personel", Storage="_Sehir", ThisKey="D_Yer", OtherKey="ID", IsForeignKey=true )]
        public Sehir Sehir
        {
            get
            {
                return this._Sehir.Entity;
            }
            set
            {
                Sehir previousValue = this._Sehir.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Sehir.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Sehir.Entity = null;
                        previousValue.Personels.Remove( this );
                    }
                    this._Sehir.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.Personels.Add( this );
                        this._D_Yer = value.ID;
                    }
                    else
                    {
                        this._D_Yer = default( int );
                    }
                    this.SendPropertyChanged( "Sehir" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_DepoCikis(DepoCiki entity)
        {
            this.SendPropertyChanging();
            entity.Personel = this;
        }

        private void detach_DepoCikis(DepoCiki entity)
        {
            this.SendPropertyChanging();
            entity.Personel = null;
        }

        private void attach_Izins(Izin entity)
        {
            this.SendPropertyChanging();
            entity.Personel = this;
        }

        private void detach_Izins(Izin entity)
        {
            this.SendPropertyChanging();
            entity.Personel = null;
        }

        private void attach_SatinAlmas(SatinAlma entity)
        {
            this.SendPropertyChanging();
            entity.Personel = this;
        }

        private void detach_SatinAlmas(SatinAlma entity)
        {
            this.SendPropertyChanging();
            entity.Personel = null;
        }

        private void attach_TasimaAracs(TasimaArac entity)
        {
            this.SendPropertyChanging();
            entity.Personel = this;
        }

        private void detach_TasimaAracs(TasimaArac entity)
        {
            this.SendPropertyChanging();
            entity.Personel = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.SatinAlma" )]
    public partial class SatinAlma : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _DMID;

        private System.DateTime _Tarih;

        private int _Miktar;

        private decimal _Ucret;

        private int _PID;

        private EntityRef<Personel> _Personel;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnDMIDChanging(int value);
        partial void OnDMIDChanged();
        partial void OnTarihChanging(System.DateTime value);
        partial void OnTarihChanged();
        partial void OnMiktarChanging(int value);
        partial void OnMiktarChanged();
        partial void OnUcretChanging(decimal value);
        partial void OnUcretChanged();
        partial void OnPIDChanging(int value);
        partial void OnPIDChanged();
        #endregion

        public SatinAlma()
        {
            this._Personel = default( EntityRef<Personel> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_DMID", DbType="Int NOT NULL" )]
        public int DMID
        {
            get
            {
                return this._DMID;
            }
            set
            {
                if ( ( this._DMID != value ) )
                {
                    this.OnDMIDChanging( value );
                    this.SendPropertyChanging();
                    this._DMID = value;
                    this.SendPropertyChanged( "DMID" );
                    this.OnDMIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Tarih", DbType="Date NOT NULL" )]
        public System.DateTime Tarih
        {
            get
            {
                return this._Tarih;
            }
            set
            {
                if ( ( this._Tarih != value ) )
                {
                    this.OnTarihChanging( value );
                    this.SendPropertyChanging();
                    this._Tarih = value;
                    this.SendPropertyChanged( "Tarih" );
                    this.OnTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Miktar", DbType="Int NOT NULL" )]
        public int Miktar
        {
            get
            {
                return this._Miktar;
            }
            set
            {
                if ( ( this._Miktar != value ) )
                {
                    this.OnMiktarChanging( value );
                    this.SendPropertyChanging();
                    this._Miktar = value;
                    this.SendPropertyChanged( "Miktar" );
                    this.OnMiktarChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ucret", DbType="Decimal(10,3) NOT NULL" )]
        public decimal Ucret
        {
            get
            {
                return this._Ucret;
            }
            set
            {
                if ( ( this._Ucret != value ) )
                {
                    this.OnUcretChanging( value );
                    this.SendPropertyChanging();
                    this._Ucret = value;
                    this.SendPropertyChanged( "Ucret" );
                    this.OnUcretChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_PID", DbType="Int NOT NULL" )]
        public int PID
        {
            get
            {
                return this._PID;
            }
            set
            {
                if ( ( this._PID != value ) )
                {
                    if ( this._Personel.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnPIDChanging( value );
                    this.SendPropertyChanging();
                    this._PID = value;
                    this.SendPropertyChanged( "PID" );
                    this.OnPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_SatinAlma", Storage="_Personel", ThisKey="PID", OtherKey="ID", IsForeignKey=true )]
        public Personel Personel
        {
            get
            {
                return this._Personel.Entity;
            }
            set
            {
                Personel previousValue = this._Personel.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Personel.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Personel.Entity = null;
                        previousValue.SatinAlmas.Remove( this );
                    }
                    this._Personel.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.SatinAlmas.Add( this );
                        this._PID = value.ID;
                    }
                    else
                    {
                        this._PID = default( int );
                    }
                    this.SendPropertyChanged( "Personel" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Sehir" )]
    public partial class Sehir : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private string _Ad;

        public override string ToString()
        {
            return Ad;
        }

        private EntitySet<Personel> _Personels;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        #endregion

        public Sehir()
        {
            this._Personels = new EntitySet<Personel>( new Action<Personel>( this.attach_Personels ), new Action<Personel>( this.detach_Personels ) );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(40) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Sehir_Personel", Storage="_Personels", ThisKey="ID", OtherKey="D_Yer" )]
        public EntitySet<Personel> Personels
        {
            get
            {
                return this._Personels;
            }
            set
            {
                this._Personels.Assign( value );
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_Personels(Personel entity)
        {
            this.SendPropertyChanging();
            entity.Sehir = this;
        }

        private void detach_Personels(Personel entity)
        {
            this.SendPropertyChanging();
            entity.Sehir = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.SulamaMalzeme" )]
    public partial class SulamaMalzeme : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _MTipID;

        private System.Nullable<int> _Uzunluk;

        private int _Adet;

        private double _Cap;

        public override string ToString()
        {
            return MalzameTip.Ad;
        }

        private EntityRef<MalzameTip> _MalzameTip;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMTipIDChanging(int value);
        partial void OnMTipIDChanged();
        partial void OnUzunlukChanging(System.Nullable<int> value);
        partial void OnUzunlukChanged();
        partial void OnAdetChanging(int value);
        partial void OnAdetChanged();
        partial void OnCapChanging(double value);
        partial void OnCapChanged();
        #endregion

        public SulamaMalzeme()
        {
            this._MalzameTip = default( EntityRef<MalzameTip> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_MTipID", DbType="Int NOT NULL" )]
        public int MTipID
        {
            get
            {
                return this._MTipID;
            }
            set
            {
                if ( ( this._MTipID != value ) )
                {
                    if ( this._MalzameTip.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMTipIDChanging( value );
                    this.SendPropertyChanging();
                    this._MTipID = value;
                    this.SendPropertyChanged( "MTipID" );
                    this.OnMTipIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Uzunluk", DbType="Int" )]
        public System.Nullable<int> Uzunluk
        {
            get
            {
                return this._Uzunluk;
            }
            set
            {
                if ( ( this._Uzunluk != value ) )
                {
                    this.OnUzunlukChanging( value );
                    this.SendPropertyChanging();
                    this._Uzunluk = value;
                    this.SendPropertyChanged( "Uzunluk" );
                    this.OnUzunlukChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Adet", DbType="Int NOT NULL" )]
        public int Adet
        {
            get
            {
                return this._Adet;
            }
            set
            {
                if ( ( this._Adet != value ) )
                {
                    this.OnAdetChanging( value );
                    this.SendPropertyChanging();
                    this._Adet = value;
                    this.SendPropertyChanged( "Adet" );
                    this.OnAdetChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Cap", DbType="Float NOT NULL" )]
        public double Cap
        {
            get
            {
                return this._Cap;
            }
            set
            {
                if ( ( this._Cap != value ) )
                {
                    this.OnCapChanging( value );
                    this.SendPropertyChanging();
                    this._Cap = value;
                    this.SendPropertyChanged( "Cap" );
                    this.OnCapChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_SulamaMalzeme", Storage="_MalzameTip", ThisKey="MTipID", OtherKey="ID", IsForeignKey=true )]
        public MalzameTip MalzameTip
        {
            get
            {
                return this._MalzameTip.Entity;
            }
            set
            {
                MalzameTip previousValue = this._MalzameTip.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._MalzameTip.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._MalzameTip.Entity = null;
                        previousValue.SulamaMalzemes.Remove( this );
                    }
                    this._MalzameTip.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.SulamaMalzemes.Add( this );
                        this._MTipID = value.ID;
                    }
                    else
                    {
                        this._MTipID = default( int );
                    }
                    this.SendPropertyChanged( "MalzameTip" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.TasimaArac" )]
    public partial class TasimaArac : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _MTipID;

        private string _Plaka;

        private System.DateTime _STarih;

        private System.Nullable<int> _Kimde;

        private System.Nullable<System.DateTime> _SilmeTarih;

        private EntitySet<Bakim> _Bakims;

        private EntityRef<MalzameTip> _MalzameTip;

        private EntityRef<Personel> _Personel;

        public override string ToString()
        {
            return MalzameTip.Ad+" ("+Plaka+")";
        }

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMTipIDChanging(int value);
        partial void OnMTipIDChanged();
        partial void OnPlakaChanging(string value);
        partial void OnPlakaChanged();
        partial void OnSTarihChanging(System.DateTime value);
        partial void OnSTarihChanged();
        partial void OnKimdeChanging(System.Nullable<int> value);
        partial void OnKimdeChanged();
        partial void OnSilmeTarihChanging(System.Nullable<System.DateTime> value);
        partial void OnSilmeTarihChanged();
        #endregion

        public TasimaArac()
        {
            this._Bakims = new EntitySet<Bakim>( new Action<Bakim>( this.attach_Bakims ), new Action<Bakim>( this.detach_Bakims ) );
            this._MalzameTip = default( EntityRef<MalzameTip> );
            this._Personel = default( EntityRef<Personel> );
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_MTipID", DbType="Int NOT NULL" )]
        public int MTipID
        {
            get
            {
                return this._MTipID;
            }
            set
            {
                if ( ( this._MTipID != value ) )
                {
                    if ( this._MalzameTip.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMTipIDChanging( value );
                    this.SendPropertyChanging();
                    this._MTipID = value;
                    this.SendPropertyChanged( "MTipID" );
                    this.OnMTipIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Plaka", DbType="Char(10) NOT NULL", CanBeNull=false )]
        public string Plaka
        {
            get
            {
                return this._Plaka;
            }
            set
            {
                if ( ( this._Plaka != value ) )
                {
                    this.OnPlakaChanging( value );
                    this.SendPropertyChanging();
                    this._Plaka = value;
                    this.SendPropertyChanged( "Plaka" );
                    this.OnPlakaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_STarih", DbType="Date NOT NULL" )]
        public System.DateTime STarih
        {
            get
            {
                return this._STarih;
            }
            set
            {
                if ( ( this._STarih != value ) )
                {
                    this.OnSTarihChanging( value );
                    this.SendPropertyChanging();
                    this._STarih = value;
                    this.SendPropertyChanged( "STarih" );
                    this.OnSTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Kimde", DbType="Int" )]
        public System.Nullable<int> Kimde
        {
            get
            {
                return this._Kimde;
            }
            set
            {
                if ( ( this._Kimde != value ) )
                {
                    if ( this._Personel.HasLoadedOrAssignedValue )
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnKimdeChanging( value );
                    this.SendPropertyChanging();
                    this._Kimde = value;
                    this.SendPropertyChanged( "Kimde" );
                    this.OnKimdeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_SilmeTarih", DbType="Date" )]
        public System.Nullable<System.DateTime> SilmeTarih
        {
            get
            {
                return this._SilmeTarih;
            }
            set
            {
                if ( ( this._SilmeTarih != value ) )
                {
                    this.OnSilmeTarihChanging( value );
                    this.SendPropertyChanging();
                    this._SilmeTarih = value;
                    this.SendPropertyChanged( "SilmeTarih" );
                    this.OnSilmeTarihChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="TasimaArac_Bakim", Storage="_Bakims", ThisKey="ID", OtherKey="AracID" )]
        public EntitySet<Bakim> Bakims
        {
            get
            {
                return this._Bakims;
            }
            set
            {
                this._Bakims.Assign( value );
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="MalzameTip_TasimaArac", Storage="_MalzameTip", ThisKey="MTipID", OtherKey="ID", IsForeignKey=true )]
        public MalzameTip MalzameTip
        {
            get
            {
                return this._MalzameTip.Entity;
            }
            set
            {
                MalzameTip previousValue = this._MalzameTip.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._MalzameTip.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._MalzameTip.Entity = null;
                        previousValue.TasimaAracs.Remove( this );
                    }
                    this._MalzameTip.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.TasimaAracs.Add( this );
                        this._MTipID = value.ID;
                    }
                    else
                    {
                        this._MTipID = default( int );
                    }
                    this.SendPropertyChanged( "MalzameTip" );
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute( Name="Personel_TasimaArac", Storage="_Personel", ThisKey="Kimde", OtherKey="ID", IsForeignKey=true )]
        public Personel Personel
        {
            get
            {
                return this._Personel.Entity;
            }
            set
            {
                Personel previousValue = this._Personel.Entity;
                if ( ( ( previousValue != value ) 
							|| ( this._Personel.HasLoadedOrAssignedValue == false ) ) )
                {
                    this.SendPropertyChanging();
                    if ( ( previousValue != null ) )
                    {
                        this._Personel.Entity = null;
                        previousValue.TasimaAracs.Remove( this );
                    }
                    this._Personel.Entity = value;
                    if ( ( value != null ) )
                    {
                        value.TasimaAracs.Add( this );
                        this._Kimde = value.ID;
                    }
                    else
                    {
                        this._Kimde = default( Nullable<int> );
                    }
                    this.SendPropertyChanged( "Personel" );
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }

        private void attach_Bakims(Bakim entity)
        {
            this.SendPropertyChanging();
            entity.TasimaArac = this;
        }

        private void detach_Bakims(Bakim entity)
        {
            this.SendPropertyChanging();
            entity.TasimaArac = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute( Name="dbo.Tatiller" )]
    public partial class Tatiller : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs( String.Empty );

        private int _ID;

        private int _Gun;

        private int _Ay;

        private System.Nullable<int> _Yil;

        private string _Ad;

        public override string ToString()
        {
            return Ad;
        }

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnGunChanging(int value);
        partial void OnGunChanged();
        partial void OnAyChanging(int value);
        partial void OnAyChanged();
        partial void OnYilChanging(System.Nullable<int> value);
        partial void OnYilChanged();
        partial void OnAdChanging(string value);
        partial void OnAdChanged();
        #endregion

        public Tatiller()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true )]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ( ( this._ID != value ) )
                {
                    this.OnIDChanging( value );
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged( "ID" );
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Gun", DbType="Int NOT NULL" )]
        public int Gun
        {
            get
            {
                return this._Gun;
            }
            set
            {
                if ( ( this._Gun != value ) )
                {
                    this.OnGunChanging( value );
                    this.SendPropertyChanging();
                    this._Gun = value;
                    this.SendPropertyChanged( "Gun" );
                    this.OnGunChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ay", DbType="Int NOT NULL" )]
        public int Ay
        {
            get
            {
                return this._Ay;
            }
            set
            {
                if ( ( this._Ay != value ) )
                {
                    this.OnAyChanging( value );
                    this.SendPropertyChanging();
                    this._Ay = value;
                    this.SendPropertyChanged( "Ay" );
                    this.OnAyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Yil", DbType="Int" )]
        public System.Nullable<int> Yil
        {
            get
            {
                return this._Yil;
            }
            set
            {
                if ( ( this._Yil != value ) )
                {
                    this.OnYilChanging( value );
                    this.SendPropertyChanging();
                    this._Yil = value;
                    this.SendPropertyChanged( "Yil" );
                    this.OnYilChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute( Storage="_Ad", DbType="NVarChar(80) NOT NULL", CanBeNull=false )]
        public string Ad
        {
            get
            {
                return this._Ad;
            }
            set
            {
                if ( ( this._Ad != value ) )
                {
                    this.OnAdChanging( value );
                    this.SendPropertyChanging();
                    this._Ad = value;
                    this.SendPropertyChanged( "Ad" );
                    this.OnAdChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ( ( this.PropertyChanging != null ) )
            {
                this.PropertyChanging( this, emptyChangingEventArgs );
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ( ( this.PropertyChanged != null ) )
            {
                this.PropertyChanged( this, new PropertyChangedEventArgs( propertyName ) );
            }
        }
    }
}
#pragma warning restore 1591
